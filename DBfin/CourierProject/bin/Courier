import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.*;
import java.util.*;
import java.util.concurrent.TimeUnit;

public class MainConsole {
	private static Scanner scan = new Scanner(System.in);
	private static DBController control;
	
	public static void main(String[] args) {
		control = new DBController();
		//Connection connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/store?useSSL=false","root", null);
		try {
			control.dbaseConnect("jdbc:mysql://localhost:3306/store?useSSL=false","root",null);
			//ps = connect.prepareStatement("Insert into dongerino.personinfo values (?, ?)");
			tableMenu();
		}catch(Exception exc){
			exc.printStackTrace();
		}
	}	
	
	public static void displayMenu() {
		int choice = 0;
		System.out.println("                    ");
		System.out.println("--------MENU--------");
		System.out.println("Select a transaction : ");
		System.out.println("-------DISPLAY------");
		System.out.println("[1] Show Receiver Information");
		System.out.println("[2] Show Sender Information");
		System.out.println("[3] Show Transactions");
		System.out.println("[4] Show All Money Express Information");
		System.out.println("[5] Show Transactions");
		System.out.println("-------CREATE-------";)
		System.out.println("[6] Add Receiver");
		System.out.println("[7] Add Sender");
		System.out.println("[8] Add Transaction");
		System.out.println("[9] Add Money Express");
		System.out.println("-------UPDATE-------");
		System.out.println("[10] Edit Receiver");
		System.out.println("[11] Edit Sender");
		System.out.println("[12] Edit Transaction");
		System.out.println("[13] Edit Money Express");
		System.out.println("-------REMOVE-------");
		System.out.println("[14] Delete Receiver");
		System.out.println("[15] Delete Sender");
		System.out.println("[16] Delete Transaction");
		System.out.println("[17] Delete Money Express");
		System.out.println("[0] Exit");
		
		while(choice > 17) {
			System.out.println("That is an invalid choice.");
			choice = scan.nextInt();
			choices(choice);
			
		}
		
	}
	
	/**public static void productMenu() {
		System.out.println("-------Send Money MENU-------");
		System.out.println("| 0.  Go back to table menu");
		System.out.println("| 1.  Enter amount of money to be sent");
		System.out.println("| 2.  Check receiver ID"); //check receiver/status?
		System.out.println("| 3.  Show all transactions"); //status?
		System.out.println("| 4.  Update a transaction");
		System.out.println("| 5.  Delete a transaction");
	}
	
	public static void orderMenu() {
		System.out.println("--------Receive Money MENU---------");
		System.out.println("| 0.  Go back to table menu");
		System.out.println("| 6.  Enter amount of money to be received");
		System.out.println("| 7.  Check senderID");
		System.out.println("| 8.  Show all transactions");
		System.out.println("| 9.  Update a transaction");
		System.out.println("| 10.  Delete a transaction");
	}**/
	
	public static void choiceExecute(int choice) {
		try {
		switch (choice) {
			case 1:
				displayMenu();
				break;
				
			case 2:
				displayMenu();
				break;
				
			case 3:
				displayMenu();
				break;
				
			case 4:
				displayMenu();
				break;
				
			case 5:
				displayMenu();
				break;
				
			case 6:
				displayMenu();
				break;
				
			case 7:
				displayMenu();
				break;
				
			case 8:
				displayMenu();
				break;
				
			case 9:
				displayMenu();
				break;
				
			case 10:

				displayMenu();
				break;
				
			case 11:
				displayMenu();
				break;
				
			case 12:
				displayMenu();
				break;

			case 13:
				displayMenu();
				break;
				
			case 14:
				displayMenu();
				break;
				
			case 15:
				displayMenu();
				break;

			case 16:
				displayMenu();
				break;
				
			case 17:
				displayMenu();
				break;
				
			case 0:
				System.out.println("Bye :(");
				System.exit(0);
				break;
			}
		
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

	public static void showReceiver() {
		try {
			ResultSet result = control.getReceiver();
			ResultSetMetaData rsmd = result.getMetaData();
			int columnNumber = rsmd.getColumnCount();
			System.out.println();
			
			while (result.next()) {
				for (int i = 1; i <= columnNumber; i++) {
					if (i > 1) System.out.print(",   ");
					String columnValue = result.getString(i);
					System.out.print(columnValue + "  ");
				}
				System.out.println("");
			}
			
				} catch (Exception e) {
				e.printStackTrace();
			}
	}
	
	public static void showSender() {
		
	}
	
	public static void showTransaction() {
		
	}
	
	public static void showMoneyExpress() {
		
	}
	
	public static void addReceiver() {
		
	}
	
	public static void addSender() {
		
	}
	
	public static void addTransaction() {
		
	}

	public static void addMoneyExpress() {
		
	}
	
	public static void editReceiver() {
		
	}
	
	public static void editSender() {
		
	}
	
	public static void editTransaction() {
		
	}
	
	public static void editMoneyExpress() {
		
	}
	
	public static void removeReceiver() {
		
	}
	
	public static void removeSender() {
		
	}
	
	public static void removeTransaction() {
		
	}
	
	public static void removeMoneyExpress() {
		
	}
	
	/**ResultSet res = sqlStmnt.executeQuery("SELECT * FROM Group2.applicant");
	System.out.printf("%5s	%20s%20s%20s%n","ID","First Name", "Last Name", "Resume");
	while(res.next()){
		System.out.printf("%5d	%20s%20s%20s%n",res.getInt(1),res.getString(2),res.getString(3),
			res.getString(4));

	}

	System.out.println("Press enter to continue");
	pauseStream();
	
	
	
	public static void newProduct() {
		System.out.println("Input new product name: ");
		String name = scan.nextLine();
		System.out.println("Input product's category: ");
		String category = scan.nextLine();
		System.out.println("Input product's brand: ");
		String brand = scan.nextLine();
		System.out.println("Input product price: ");
		Integer price = scan.nextInt();
		System.out.println("Input product quantity: ");
		Integer qty = scan.nextInt();
		try {
			control.newProduct(name, category, brand, price, qty);
		}catch(Exception e) {
			e.printStackTrace();
		}
		
	}
	public static void checkProductID() {  // check a product if it exist in the database
		System.out.println("Enter product ID: ");
		Integer id = scan.nextInt();
		scan.nextLine();
		try {
			ResultSet rs = control.verifyID(id);
			if(rs.next()) {
				System.out.println("Product ID does exist in the database");
			}else {
				System.out.println("Product ID does not exist in the dabatase");
			}
			} catch (Exception e) {
			e.printStackTrace();
			}
	}
	
	public static void showProductInfo(Integer id) {
		try {
			ResultSet result = control.getProductInfo(id);
			ResultSetMetaData rsmd = result.getMetaData();
			int columnNumber = rsmd.getColumnCount();
			System.out.println();
			while (result.next()) {
				for (int i = 1; i <= columnNumber; i++) {
					if (i > 1) System.out.print(",   ");
					String columnValue = result.getString(i);
					System.out.print(columnValue + "  ");
				}
				System.out.println("");
			}
			} catch (Exception e) {
			e.printStackTrace();
			}
	}
	
	public static void showAllProducts() { //Shows all products
	try {
		ResultSet result = control.getAllProduct();
		ResultSetMetaData rsmd = result.getMetaData();
		int columnNumber = rsmd.getColumnCount();
		System.out.println();
		while (result.next()) {
			for (int i = 1; i <= columnNumber; i++) {
				if (i > 1) System.out.print(",   ");
				String columnValue = result.getString(i);
				System.out.print(columnValue + "  ");
			}
			System.out.println("");
		}
		} catch (Exception e) {
		e.printStackTrace();
		}
	}
	
	public static void updateProductQuantity() {
		System.out.println("Input the ID of the product: ");
		Integer ID = scan.nextInt();
		scan.nextLine();
		System.out.println("Input the new quantity for the product: ");
		Integer quantity = scan.nextInt();
		try {
			control.updateProductQty(ID,quantity);
		}catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void deleteProduct() { //Deletes a product
		System.out.println("Input the ID of the product that you want to delete: ");
		Integer ID = scan.nextInt();
		try{
			control.deleteProduct(ID);
		}catch (Exception e){
			e.printStackTrace();
		}
	}

	//----------------------------------------------------/
	
	//--------------------ORDER MENU----------------------/
	public static void showAllOrders() { //Shows all products
	try {
		ResultSet result = control.getAllOrder();
		ResultSetMetaData rsmd = result.getMetaData();
		int columnNumber = rsmd.getColumnCount();
		System.out.println();
		while (result.next()) {
			for (int i = 1; i <= columnNumber; i++) {
				if (i > 1) System.out.print(",   ");
				String columnValue = result.getString(i);
				System.out.print(columnValue + "  ");
			}
			System.out.println("");
		}
		} catch (Exception e) {
		e.printStackTrace();
		}
	}
	
	public static void newOrder() {
		System.out.println("Input order quantity: ");
		Integer quantity = scan.nextInt();
		scan.nextLine();
		System.out.println("Input order type(Cash or Online): ");
		String type = scan.nextLine();
		System.out.println("Input the order status(Pending or Claimed): ");
		String status = scan.nextLine();
		System.out.println("Input the id of the customer who orderd: ");
		Integer cID = scan.nextInt();
		scan.nextLine();
		System.out.println("Input the id of the product: ");
		Integer pID = scan.nextInt();
		scan.nextLine();
		System.out.println("Input the id of the cashier: ");
		Integer caID = scan.nextInt();
		scan.nextLine();
		try {
			control.newOrder(quantity,type,status,cID,pID,caID);
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void checkOrderStatus() {
		System.out.println("Enter the id of the order you want to check: ");
		Integer id = scan.nextInt();
		try {
			ResultSet rs = control.checkOrderStatus(id);
			ResultSetMetaData rsmd = rs.getMetaData();
			int columnNumber = rsmd.getColumnCount();
			System.out.println();
			while (rs.next()) {
				for (int i = 1; i <= columnNumber; i ++) {
					if (i > 1) System.out.print(",   ");
					String columnValue = rs.getString(i);
					System.out.print("Current order status: ");
					System.out.print(columnValue + " ");
				}
				System.out.println("");
			}
			} catch (Exception e) {
			e.printStackTrace();
			}
	}
	
	public static void updateOrderStatus() {
		System.out.println("Enter product ID: ");
		Integer ID = scan.nextInt();
		scan.nextLine();
		System.out.println("Enter new product status(Pending or Claimed): ");
		String status = scan.nextLine();
		try {
			control.updateOrderStatus(status,ID);
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void deleteOrder() {
		System.out.println("Enter the ID of the order to be deleted: ");
		Integer id = scan.nextInt();
		try {
			control.deleteOrder(id);
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	//----------------------------------------------------/
	//--------------------CUSTOMER MENU-------------------/
	
	public static void showAllCustomers() { //Shows all products
	try {
		ResultSet result = control.getAllCustomers();
		ResultSetMetaData rsmd = result.getMetaData();
		int columnNumber = rsmd.getColumnCount();
		System.out.println();
		while (result.next()) {
			for (int i = 1; i <= columnNumber; i++) {
				if (i > 1) System.out.print(",   ");
				String columnValue = result.getString(i);
				System.out.print(columnValue + "  ");
			}
			System.out.println("");
		}
		} catch (Exception e) {
		e.printStackTrace();
		}
	}
	
	public static void newCustomer() {
		System.out.println("Enter customer name: ");
		String name = scan.nextLine();
		System.out.println("Enter customer address: ");
		String address = scan.nextLine();
		System.out.println("Enter customer contact no: ");
		Integer contact = scan.nextInt();
		try {
			control.newCustomer(name,address,contact);
		}catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void showCustomerContact() {
		System.out.println("Input customer ID: ");
		Integer id = scan.nextInt();
		try {
			ResultSet rs = control.getCustomerContact(id);
			ResultSetMetaData rsmd = rs.getMetaData();
			int columnNumber = rsmd.getColumnCount();
			while(rs.next()) {
				for (int i = 1; i <= columnNumber; i++) {
				if(i > 1) System.out.print(",   ");
				String columnValue = rs.getString(i);
				System.out.print("Customer contact: ");
				System.out.print(columnValue + " ");
			}
			System.out.println("");
			}
		}catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void updateCustomerAddress() {
		System.out.println("Input customer ID: ");
		Integer ID = scan.nextInt();
		scan.nextLine();
		System.out.println("Enter new address: ");
		String address = scan.nextLine();
		try {
			control.updateCustomerAddress(ID, address);
		}catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void deleteCustomer() {
		System.out.println("Input customer ID: ");
		Integer ID = scan.nextInt();
		scan.nextLine();
		try {
			control.deleteCustomer(ID);
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	//----------------------------------------------------/
	//-------------------Cashier Menu---------------------/
	
	public static void showAllCashiers() { //Shows all products
	try {
		ResultSet result = control.getAllCashiers();
		ResultSetMetaData rsmd = result.getMetaData();
		int columnNumber = rsmd.getColumnCount();
		System.out.println();
		while (result.next()) {
			for (int i = 1; i <= columnNumber; i++) {
				if (i > 1) System.out.print(",   ");
				String columnValue = result.getString(i);
				System.out.print(columnValue + "  ");
			}
			System.out.println("");
		}
		} catch (Exception e) {
		e.printStackTrace();
		}
	}
	
	public static void newCashier() {
		System.out.println("Input cashier name: ");
		String name = scan.nextLine();
		System.out.println("Input cashier salary: ");
		Integer salary = scan.nextInt();
		try {
			control.newCashier(name,salary);
		}catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void cashierInfo() {
		System.out.println("Input cashier ID: ");
		Integer id = scan.nextInt();
		try {
			ResultSet result = control.getCashierInfo(id);
			ResultSetMetaData rsmd = result.getMetaData();
			int columnNumber = rsmd.getColumnCount();
			System.out.println();
			System.out.println("ID      Name          Salary");
			while (result.next()) {
				for (int i = 1; i <= columnNumber; i++) {
					if (i > 1) System.out.print(",   ");
					String columnValue = result.getString(i);
					System.out.print(columnValue + "  ");
				}
				System.out.println("");
			}
			} catch (Exception e) {
			e.printStackTrace();
			}
	}
	
	public static void removeCashier() {
		System.out.println("Input cashier ID: ");
		Integer id = scan.nextInt();
		try {
			control.deleteCashier(id);
		}catch (Exception e) {
			e.printStackTrace();
		}
	}
	//----------------------------------------------------/	
	
}**/
